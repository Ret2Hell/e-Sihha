name: Reusable Microservice CI

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
      service-dir:
        required: true
        type: string
      dockerfile-path:
        required: true
        type: string

jobs:
  build-test-publish:
    name: Build, Test, Scan & Publish ${{ inputs.service-name }} service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies (root)
        run: npm ci

      - name: Lint ${{ inputs.service-name }} service
        working-directory: ${{ inputs.service-dir }}
        run: npm run lint
        continue-on-error: true

      # Uncomment if you add tests
      # - name: Test
      #   working-directory: ${{ inputs.service-dir }}
      #   run: npm test

      - name: Build ${{ inputs.service-name }} service
        run: npm run build ${{ inputs.service-name }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image (without push)
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ inputs.dockerfile-path }}
          load: true
          tags: ${{ inputs.service-name }}:local

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ inputs.service-name }}:local
          format: table
          exit-code: 0
          severity: CRITICAL,HIGH

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ inputs.dockerfile-path }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.service-name }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.service-name }}:${{ github.sha }}
